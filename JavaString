"A string is traditionally a sequence of characters, either as a literal constant or as some kind of variable." â€” Wikipedia: String (computer science)

This exercise is to test your understanding of Java Strings. A sample String declaration:

String myString = "Hello World!"
The elements of a String are called characters. The number of characters in a String is called the length, and it can be retrieved with the String.length() method.

Given two strings of lowercase English letters,  and , perform the following operations:

Sum the lengths of  and .
Determine if  is lexicographically larger than  (i.e.: does  come before  in the dictionary?).
Capitalize the first letter in  and  and print them on a single line, separated by a space.
Input Format

The first line contains a string . The second line contains another string . The strings are comprised of only lowercase English letters.

Output Format

There are three lines of output:
For the first line, sum the lengths of  and .
For the second line, write Yes if  is lexicographically greater than  otherwise print No instead.
For the third line, capitalize the first letter in both  and  and print them on a single line, separated by a space.

Sample Input 0

hello
java

Sample Output 0

9
No
Hello Java
Explanation 0

String  is "hello" and  is "java".

 has a length of , and  has a length of ; the sum of their lengths is .
When sorted alphabetically/lexicographically, "hello" precedes "java"; therefore,  is not greater than  and the answer is No.

When you capitalize the first letter of both  and  and then print them separated by a space, you get "Hello Java".

Code:
import java.io.*;
import java.util.*;

public class Solution {

    public static void main(String[] args) {
        
        Scanner sc=new Scanner(System.in);
        String A=sc.next();
        String B=sc.next();
        /* Enter your code here. Print output to STDOUT. */
   
        System.out.println(A.length()+B.length());
        System.out.println(A.compareTo(B)>0?"Yes":"No");
        // it means if A is greater than B then it should print Yes...else No.. for example if A is ravi and B is apreddy then 
        then the difference between 'r' of ravi and 'a'of apreddy is 18-1=17 it means positive value.so here it is positive result.
        hence B i.e,apreddy is lexicographically first..
        //
        System.out.println(A.substring(0,1).toUpperCase()+A.substring(1,A.length())
        +" "+ B.substring(0,1).toUpperCase()+B.substring(1,B.length()));
        
        //ee..the basic thing in "A.substring(0, 1).toUpperCase()+A.substring(1, A.length())"is that in 1st string 'hello' 
        you have to convert 'h' as 'H' and rest of thing will be in lowercase thats why we have used "A.substring(0, 1).toUpperCase()"here 
        it will start from 0 which is inclusive and 1 is exclusive so only 'h' is taken into consideration for converting in uppercase letter
        ,now for concatinating rest of letter as it is we are using "A.substring(1, A.length())" it will take all the string 
        from 1st index upto last
        //
        
    }
}
